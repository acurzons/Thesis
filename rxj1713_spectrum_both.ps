%!PS-Adobe-2.0
%%Title: rxj1713_spectrum_both.ps
%%Creator: gnuplot 5.0 patchlevel 5
%%CreationDate: Tue Aug 15 12:32:50 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (rxj1713_spectrum_both.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 5)
  /Author (Punda)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Aug 15 12:32:50 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
938 448 M
63 0 V
5946 0 R
-63 0 V
stroke
854 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e+43)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
938 654 M
31 0 V
5978 0 R
-31 0 V
938 925 M
31 0 V
5978 0 R
-31 0 V
938 1065 M
31 0 V
5978 0 R
-31 0 V
938 1131 M
63 0 V
5946 0 R
-63 0 V
stroke
854 1131 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e+44)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
938 1336 M
31 0 V
5978 0 R
-31 0 V
938 1608 M
31 0 V
5978 0 R
-31 0 V
938 1748 M
31 0 V
5978 0 R
-31 0 V
938 1814 M
63 0 V
5946 0 R
-63 0 V
stroke
854 1814 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e+45)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
938 2019 M
31 0 V
5978 0 R
-31 0 V
938 2291 M
31 0 V
5978 0 R
-31 0 V
938 2430 M
31 0 V
5978 0 R
-31 0 V
938 2497 M
63 0 V
5946 0 R
-63 0 V
stroke
854 2497 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e+46)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
938 2702 M
31 0 V
5978 0 R
-31 0 V
938 2974 M
31 0 V
5978 0 R
-31 0 V
938 3113 M
31 0 V
5978 0 R
-31 0 V
938 3179 M
63 0 V
5946 0 R
-63 0 V
stroke
854 3179 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e+47)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
938 3385 M
31 0 V
5978 0 R
-31 0 V
938 3657 M
31 0 V
5978 0 R
-31 0 V
938 3796 M
31 0 V
5978 0 R
-31 0 V
938 3862 M
63 0 V
5946 0 R
-63 0 V
stroke
854 3862 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e+48)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
938 4068 M
31 0 V
5978 0 R
-31 0 V
938 4340 M
31 0 V
5978 0 R
-31 0 V
938 4479 M
31 0 V
5978 0 R
-31 0 V
938 4545 M
63 0 V
5946 0 R
-63 0 V
stroke
854 4545 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e+49)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
938 4751 M
31 0 V
5978 0 R
-31 0 V
938 448 M
0 63 V
0 4360 R
0 -63 V
stroke
938 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1359 448 M
0 31 V
0 4392 R
0 -31 V
1915 448 M
0 31 V
0 4392 R
0 -31 V
2200 448 M
0 31 V
0 4392 R
0 -31 V
2335 448 M
0 63 V
0 4360 R
0 -63 V
stroke
2335 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e+00)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2756 448 M
0 31 V
0 4392 R
0 -31 V
3312 448 M
0 31 V
0 4392 R
0 -31 V
3597 448 M
0 31 V
0 4392 R
0 -31 V
3732 448 M
0 63 V
0 4360 R
0 -63 V
stroke
3732 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e+01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4153 448 M
0 31 V
0 4392 R
0 -31 V
4709 448 M
0 31 V
0 4392 R
0 -31 V
4994 448 M
0 31 V
0 4392 R
0 -31 V
5129 448 M
0 63 V
0 4360 R
0 -63 V
stroke
5129 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e+02)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5550 448 M
0 31 V
0 4392 R
0 -31 V
6106 448 M
0 31 V
0 4392 R
0 -31 V
6391 448 M
0 31 V
0 4392 R
0 -31 V
6526 448 M
0 63 V
0 4360 R
0 -63 V
stroke
6526 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e+03)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6947 448 M
0 31 V
0 4392 R
0 -31 V
stroke
LTB
LCb setrgbcolor
938 4871 N
938 448 L
6009 0 V
0 4423 V
-6009 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (E)]
[(Helvetica) 112.0 70.0 true true 0 (2)]
[(Helvetica) 140.0 0.0 true true 0 ( dN/dE \(erg\))]
] -60.7 MCshow
grestore
LTb
LCb setrgbcolor
3942 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Particle Energy \(TeV\))]
] -46.7 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
2870 1001 M
[ [(Helvetica) 140.0 0.0 true true 0 (Electron Spectrum)]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 958 2850 Pls
1028 2858 Pls
1098 2865 Pls
1168 2873 Pls
1238 2880 Pls
1308 2888 Pls
1378 2895 Pls
1447 2903 Pls
1517 2910 Pls
1587 2918 Pls
1657 2925 Pls
1727 2932 Pls
1797 2940 Pls
1867 2947 Pls
1936 2954 Pls
2006 2962 Pls
2076 2969 Pls
2146 2976 Pls
2216 2983 Pls
2286 2991 Pls
2355 2998 Pls
2425 3005 Pls
2495 3012 Pls
2565 3019 Pls
2635 3026 Pls
2705 3033 Pls
2775 3039 Pls
2844 3046 Pls
2914 3039 Pls
2984 3007 Pls
3054 2974 Pls
3124 2940 Pls
3194 2907 Pls
3264 2874 Pls
3334 2840 Pls
3403 2806 Pls
3473 2772 Pls
3543 2738 Pls
3613 2703 Pls
3683 2668 Pls
3753 2632 Pls
3822 2596 Pls
3892 2560 Pls
3962 2523 Pls
4032 2485 Pls
4102 2447 Pls
4172 2407 Pls
4242 2367 Pls
4312 2326 Pls
4381 2254 Pls
4451 2205 Pls
4521 2154 Pls
4591 2101 Pls
4661 2044 Pls
4731 1983 Pls
4800 1918 Pls
4870 1847 Pls
4940 1770 Pls
5010 1685 Pls
5080 1590 Pls
5150 1483 Pls
5219 1360 Pls
5289 1217 Pls
5359 1047 Pls
5429 840 Pls
5499 581 Pls
3153 1001 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C LCb setrgbcolor
2870 861 M
[ [(Helvetica) 140.0 0.0 true true 0 (Hess Electron Spectrum)]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C 1031 2817 Crs
1365 2867 Crs
1717 2909 Crs
2063 2951 Crs
2366 2986 Crs
2615 3021 Crs
2967 3015 Crs
3276 2875 Crs
3568 2742 Crs
3883 2595 Crs
4187 2441 Crs
4496 2266 Crs
4763 2076 Crs
4994 1852 Crs
5181 1551 Crs
5333 1180 Crs
5424 892 Crs
5484 605 Crs
3153 861 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C LCb setrgbcolor
2870 721 M
[ [(Helvetica) 140.0 0.0 true true 0 (Proton Spectrum)]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C 969 4261 Star
1039 4277 Star
1109 4293 Star
1179 4309 Star
1249 4325 Star
1318 4341 Star
1388 4357 Star
1458 4373 Star
1528 4389 Star
1598 4405 Star
1668 4421 Star
1738 4437 Star
1807 4453 Star
1877 4468 Star
1947 4484 Star
2017 4500 Star
2087 4516 Star
2157 4532 Star
2227 4547 Star
2296 4563 Star
2366 4579 Star
2436 4595 Star
2506 4610 Star
2576 4618 Star
2646 4620 Star
2716 4621 Star
2786 4622 Star
2855 4624 Star
2925 4625 Star
2995 4626 Star
3065 4627 Star
3135 4628 Star
3205 4628 Star
3274 4629 Star
3344 4629 Star
3414 4629 Star
3484 4628 Star
3554 4628 Star
3624 4627 Star
3694 4626 Star
3764 4624 Star
3833 4622 Star
3903 4620 Star
3973 4617 Star
4043 4613 Star
4113 4608 Star
4183 4603 Star
4252 4597 Star
4322 4590 Star
4392 4582 Star
4462 4572 Star
4532 4561 Star
4602 4549 Star
4672 4535 Star
4741 4518 Star
4811 4500 Star
4881 4479 Star
4951 4455 Star
5021 4428 Star
5091 4398 Star
5161 4363 Star
5230 4324 Star
5300 4280 Star
5370 4231 Star
5440 4175 Star
5510 4112 Star
5580 4041 Star
5650 3962 Star
5719 3872 Star
5789 3771 Star
5859 3658 Star
5929 3530 Star
5999 3387 Star
6069 3226 Star
6138 3045 Star
6208 2842 Star
6278 2613 Star
6348 2357 Star
6418 2069 Star
6488 1746 Star
3153 721 Star
% End plot #3
% Begin plot #4
1.000 UP
1.000 UL
LTb
0.90 0.62 0.00 C LCb setrgbcolor
2870 581 M
[ [(Helvetica) 140.0 0.0 true true 0 (HESS Proton Spectrum)]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.90 0.62 0.00 C 1056 4268 Box
1299 4331 Box
1505 4381 Box
1748 4444 Box
2015 4514 Box
2258 4577 Box
2428 4620 Box
2725 4627 Box
3053 4627 Box
3375 4634 Box
3709 4627 Box
4067 4613 Box
4401 4579 Box
4765 4509 Box
5141 4376 Box
5456 4173 Box
5669 3949 Box
5832 3710 Box
6020 3353 Box
6160 3010 Box
6275 2659 Box
6378 2295 Box
6468 1888 Box
6535 1531 Box
6602 1187 Box
6656 865 Box
3153 581 Box
% End plot #4
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
938 4871 N
938 448 L
6009 0 V
0 4423 V
-6009 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
